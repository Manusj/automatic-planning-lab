['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'output_cerberus_lab2.1', '--transform-task', 'preprocess', 'domain.pddl', 'uav_problem_u1_r1_l4_p6_c6_g6_ct2.pddl', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
Deleting existing plans
Deleting plan file: output_cerberus_lab2.1.1
INFO     Running translator.
INFO     translator input: ['domain.pddl', 'uav_problem_u1_r1_l4_p6_c6_g6_ct2.pddl']
INFO     translator arguments: []
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py domain.pddl uav_problem_u1_r1_l4_p6_c6_g6_ct2.pddl
Parsing...
Parsing: [0.000s CPU, 0.006s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 59 rules.
Computing model... [0.000s CPU, 0.006s wall-clock]
480 relevant atoms
361 auxiliary atoms
841 final queue length
1558 total queue pushes
Completing instantiation... [0.010s CPU, 0.012s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
16 of 22 variables necessary.
6 of 12 mutex groups necessary.
322 of 322 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 16
Translator derived variables: 0
Translator facts: 52
Translator goal facts: 7
Translator mutex groups: 6
Translator total mutex groups size: 18
Translator operators: 322
Translator axioms: 0
Translator task size: 2519
Translator peak memory: 26672 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.060s CPU, 0.067s wall-clock]
INFO     Run task transformation (preprocess).
INFO     Absolute path: /planner/builds/release64/bin/preprocess
INFO     callstring: /planner/builds/release64/bin/preprocess < output.sas
Building causal graph...
The causal graph is not acyclic.
16 variables of 16 necessary
6 of 6 mutex groups necessary.
322 of 322 operators necessary.
0 of 0 axiom rules necessary.
Initializing mutex computation...
Mutex computation initialized with 52 fluents.
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=256, notReached=2274, spurious=174
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=2524, notReached=6, spurious=174
0 operators are spurious because were not triggered
H^2 mutexes added fw: 6, unreachable: 0
0 of 322 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=1401, notReached=1123, spurious=180
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=2524, notReached=0, spurious=180
0 operators are spurious because were not triggered
H^2 mutexes added bw: 0, unreachable: 0
0 of 322 operators detected as spurious
Total mutex and disambiguation time: 0.005305 iterations: 2
9 of 9 mutex groups necessary.
322 of 322 operators necessary.
0 of 0 axiom rules necessary.
Change id of operators: 322
Change id of mutexes
Change id of goals
Change id of initial state
Remove unreachable facts from variables: 16
9 of 9 mutex groups necessary.
322 of 322 operators necessary.
0 of 0 axiom rules necessary.
Updating causal graph and pruning unnecessary facts
16 variables of 16 of 16 necessary
The causal graph is not acyclic.
16 variables of 16 necessary
9 of 9 mutex groups necessary.
322 of 322 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor variables: 16
Preprocessor facts: 52
Preprocessor derived variables: 0
Preprocessor operators: 322
Preprocessor mutex groups: 9
Preprocessor task size: 2525
Writing output...
done
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: None
INFO     search memory limit: None
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file output_cerberus_lab2.1 < output.sas
reading input... [t=7.4264e-05s]
done reading input! [t=0.00267305s]
packing state variables...done! [t=0.00269904s]
Variables: 16
FactPairs: 52
Bytes per state: 4
Building successor generator...done! [t=0.00302944s]
peak memory difference for root successor generator creation: 0 KB
time for root successor generation creation: 0.000241713s
done initializing global data [t=0.00308431s]
Simplifying 854 unary operators... done! [744 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.00183538s
Discovered 19 landmarks, of which 0 are disjunctive and 0 are conjunctive 
19 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb)), single(hrb, pref_only = true), single(hlm), single(hlm, pref_only = true)), boost = 1000), preferred = list(hrb, hlm))
Conducting lazy best first search, (real) bound = 2147483647
9 initial landmarks, 7 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 322 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 3
Checking connectivity...
Done checking connectivity
Finished initializing Red-Black task core at time step [t=0.0102595s]
Total number of invertible variables is 3
building causal graph...done! [t=0.000305631s]
Invertible variables connection status: 1
Invertible variables without leafs connection status: 1
Invertible variables with one directional connection status: 1
Setting black variables...
Variables order is set
Use connected is set to False
---------------------------------------------------------------------------------------
{ Atom obj_at(carrier1, depot), Atom obj_at(carrier1, loc1), Atom obj_at(carrier1, loc2), Atom obj_at(carrier1, loc3), Atom obj_at(carrier1, loc4) } is invertible, marked black [1 side effects]
{ Atom carrier_crate(carrier1, crate1), Atom obj_at(crate1, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_crate(carrier1, crate2), Atom obj_at(crate2, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_crate(carrier1, crate3), Atom obj_at(crate3, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_crate(carrier1, crate4), Atom obj_at(crate4, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_crate(carrier1, crate5), Atom obj_at(crate5, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_crate(carrier1, crate6), Atom obj_at(crate6, depot), <none of those> } is not invertible, marked red [2 side effects]
{ Atom carrier_freespace(carrier1, num0), Atom carrier_freespace(carrier1, num1), Atom carrier_freespace(carrier1, num2), Atom carrier_freespace(carrier1, num3), Atom carrier_freespace(carrier1, num4) } is invertible, marked black [7 side effects]
{ Atom heli_content(uav1, crate1), Atom heli_content(uav1, crate2), Atom heli_content(uav1, crate3), Atom heli_content(uav1, crate4), Atom heli_content(uav1, crate5), Atom heli_content(uav1, crate6), Atom heli_free(uav1) } is not invertible, marked red [13 side effects]
{ Atom obj_at(uav1, depot), Atom obj_at(uav1, loc1), Atom obj_at(uav1, loc2), Atom obj_at(uav1, loc3), Atom obj_at(uav1, loc4) } is invertible, marked red [1 side effects], all pairs connected
{ Atom preson_crate(person1, medicine), NegatedAtom preson_crate(person1, medicine) } is not invertible, marked red [1 side effects]
{ Atom preson_crate(person2, medicine), NegatedAtom preson_crate(person2, medicine) } is not invertible, marked red [1 side effects]
{ Atom preson_crate(person3, medicine), NegatedAtom preson_crate(person3, medicine) } is not invertible, marked red [1 side effects]
{ Atom preson_crate(person4, food), NegatedAtom preson_crate(person4, food) } is not invertible, marked red [1 side effects]
{ Atom preson_crate(person4, medicine), NegatedAtom preson_crate(person4, medicine) } is not invertible, marked red [1 side effects]
{ Atom preson_crate(person6, medicine), NegatedAtom preson_crate(person6, medicine) } is not invertible, marked red [1 side effects]
---------------------------------------------------------------------------------------
Total number of black variables is 2
Total number of black root variables is 0
Total number of variables is 16
Total number of variables with all pairs of values connected is 1
Total number of variables with all values connected to goal is 0
Total number of black variables with strongly connected parents only is 0
Maximal number of side effects for black variable is 7
---------------------------------------------------------------------------------------
Black DAG usage status: 1
Causal links between black variables were found. Using black DAG
Finished initializing Red-Black task at time step [t=0.0107593s]
Counting red preconditions..
Preparing for red fact following..
Setting use black reachable for black variables..
Keeping achieving operators for red facts..
Initializing black variables...
Adding edges to forward graph, for the later calculation of missing values
Precalculating all pair shortest paths
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.0115165s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for novelty(eval = hrb): 0
[g=0, 1 evaluated, 0 expanded, t=0.0115886s, 5924 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
Initial heuristic value for novelty(eval = hrb): 0
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=1, 6 evaluated, 5 expanded, t=0.0119367s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=1, 8 evaluated, 7 expanded, t=0.0120669s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=3, 19 evaluated, 17 expanded, t=0.0124786s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=5, 33 evaluated, 31 expanded, t=0.0129959s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=7, 113 evaluated, 111 expanded, t=0.015508s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=9, 124 evaluated, 122 expanded, t=0.0159399s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
[g=11, 200 evaluated, 198 expanded, t=0.0184294s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=13, 211 evaluated, 209 expanded, t=0.018854s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=15, 238 evaluated, 236 expanded, t=0.019632s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=16, 239 evaluated, 237 expanded, t=0.0196959s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=17, 244 evaluated, 242 expanded, t=0.0198839s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=19, 281 evaluated, 279 expanded, t=0.0209231s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=20, 282 evaluated, 280 expanded, t=0.0209989s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=21, 287 evaluated, 285 expanded, t=0.0211745s, 5924 KB]
Cost to: 23, cost from: 1 the total is: 24
Solution found!
Actual search time: 0.0124594s [t=0.0217484s]
pickup_crate uav1 crate1 depot food (1)
fly_to uav1 depot loc1 (1)
deliver uav1 person4 loc1 crate1 food (1)
fly_to uav1 loc1 depot (1)
pickup_crate uav1 crate2 depot medicine (1)
fly_to uav1 depot loc1 (1)
deliver uav1 person2 loc1 crate2 medicine (1)
fly_to uav1 loc1 depot (1)
pickup_crate uav1 crate3 depot medicine (1)
fly_to uav1 depot loc1 (1)
deliver uav1 person4 loc1 crate3 medicine (1)
fly_to uav1 loc1 depot (1)
pickup_crate uav1 crate4 depot medicine (1)
fly_to uav1 depot loc1 (1)
deliver uav1 person6 loc1 crate4 medicine (1)
fly_to uav1 loc1 depot (1)
pickup_crate uav1 crate5 depot medicine (1)
fly_to uav1 depot loc2 (1)
deliver uav1 person3 loc2 crate5 medicine (1)
fly_to uav1 loc2 depot (1)
pickup_crate uav1 crate6 depot medicine (1)
fly_to uav1 depot loc3 (1)
deliver uav1 person1 loc3 crate6 medicine (1)
fly_to uav1 loc3 depot (1)
Plan length: 24 step(s).
Plan cost: 24
Expanded 306 state(s).
Reopened 0 state(s).
Evaluated 308 state(s).
Evaluations: 615
Generated 1900 state(s).
Dead ends: 1 state(s).
Number of registered states: 308
Best solution cost so far: 24
Solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 5)
Conducting lazy best first search, (real) bound = 24
9 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=0.0222314s, 5924 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=1, 2 evaluated, 1 expanded, t=0.0223407s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=1, 4 evaluated, 3 expanded, t=0.0224591s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=3, 13 evaluated, 11 expanded, t=0.0227889s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=5, 17 evaluated, 15 expanded, t=0.0229462s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=7, 21 evaluated, 19 expanded, t=0.023086s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 34 evaluated, 32 expanded, t=0.0235113s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 35 evaluated, 33 expanded, t=0.0235756s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=11, 40 evaluated, 38 expanded, t=0.0237472s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=12, 50 evaluated, 48 expanded, t=0.0240583s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=13, 51 evaluated, 49 expanded, t=0.0241172s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=15, 54 evaluated, 52 expanded, t=0.0242165s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=17, 60 evaluated, 58 expanded, t=0.0243885s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=19, 62 evaluated, 60 expanded, t=0.024468s, 5924 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=21, 66 evaluated, 64 expanded, t=0.0245921s, 5924 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=23, 68 evaluated, 66 expanded, t=0.0246565s, 5924 KB]
Completely explored state space -- no solution!
Actual search time: 23.9058s [t=23.928s]
Expanded 994375 state(s).
Reopened 373415 state(s).
Evaluated 1042296 state(s).
Evaluations: 1663256
Generated 5294102 state(s).
Dead ends: 47921 state(s).
Number of registered states: 668881
Best solution cost so far: 24
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 3)
Conducting lazy best first search, (real) bound = 24
9 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=24.1627s, 120780 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=1, 2 evaluated, 1 expanded, t=24.1628s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=1, 4 evaluated, 3 expanded, t=24.1629s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=3, 13 evaluated, 11 expanded, t=24.1632s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=5, 17 evaluated, 15 expanded, t=24.1634s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=7, 21 evaluated, 19 expanded, t=24.1635s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=8, 35 evaluated, 33 expanded, t=24.164s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 36 evaluated, 34 expanded, t=24.164s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=11, 41 evaluated, 39 expanded, t=24.1642s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=12, 51 evaluated, 49 expanded, t=24.1644s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=13, 52 evaluated, 50 expanded, t=24.1645s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=15, 55 evaluated, 53 expanded, t=24.1646s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=17, 61 evaluated, 59 expanded, t=24.1648s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=19, 67 evaluated, 65 expanded, t=24.1649s, 120780 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=21, 74 evaluated, 72 expanded, 1 reopened, t=24.1651s, 120780 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=23, 80 evaluated, 78 expanded, 1 reopened, t=24.1652s, 120780 KB]
Completely explored state space -- no solution!
Actual search time: 24.1772s [t=48.3398s]
Expanded 768736 state(s).
Reopened 147776 state(s).
Evaluated 816657 state(s).
Evaluations: 1437617
Generated 4155901 state(s).
Dead ends: 47921 state(s).
Number of registered states: 668881
Best solution cost so far: 24
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 2)
Conducting lazy best first search, (real) bound = 24
9 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=48.6149s, 123244 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=1, 2 evaluated, 1 expanded, t=48.6151s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=1, 4 evaluated, 3 expanded, t=48.6153s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=3, 18 evaluated, 16 expanded, t=48.6158s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=5, 27 evaluated, 23 expanded, t=48.616s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=7, 31 evaluated, 27 expanded, t=48.6162s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=7, 59 evaluated, 54 expanded, t=48.6171s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 65 evaluated, 59 expanded, t=48.6172s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=11, 71 evaluated, 65 expanded, 2 reopened, t=48.6174s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=11, 129 evaluated, 120 expanded, 4 reopened, t=48.619s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=13, 132 evaluated, 123 expanded, 4 reopened, t=48.6191s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=15, 135 evaluated, 126 expanded, 5 reopened, t=48.6192s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=17, 330 evaluated, 321 expanded, 5 reopened, t=48.625s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=19, 457 evaluated, 416 expanded, 9 reopened, t=48.628s, 123244 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=21, 747 evaluated, 706 expanded, 10 reopened, t=48.6366s, 123244 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=23, 898 evaluated, 809 expanded, 10 reopened, t=48.6401s, 123244 KB]
Completely explored state space -- no solution!
Actual search time: 22.3069s [t=70.9217s]
Expanded 714014 state(s).
Reopened 93054 state(s).
Evaluated 761935 state(s).
Evaluations: 1382895
Generated 3873479 state(s).
Dead ends: 47921 state(s).
Number of registered states: 668881
Best solution cost so far: 24
No solution found - keep searching
Starting search: lazy_wastar(list(hrb, hlm), preferred = list(hrb, hlm), w = 1)
Conducting lazy best first search, (real) bound = 24
9 initial landmarks, 7 goal landmarks
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 11
[g=0, 1 evaluated, 0 expanded, t=71.1599s, 123568 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 10
Initial heuristic value for rb(dag = from_coloring, extract_plan = true): 11
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 9
[g=1, 2 evaluated, 1 expanded, t=71.16s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 10
[g=1, 3 evaluated, 2 expanded, t=71.1601s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 9
[g=3, 16 evaluated, 14 expanded, t=71.1606s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 8
[g=5, 47 evaluated, 43 expanded, t=71.1615s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 7
[g=5, 55 evaluated, 51 expanded, t=71.1618s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 6
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 7
[g=7, 92 evaluated, 84 expanded, t=71.1629s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 6
[g=9, 195 evaluated, 175 expanded, 4 reopened, t=71.1656s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 5
[g=9, 213 evaluated, 193 expanded, 4 reopened, t=71.1662s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 5
[g=11, 277 evaluated, 252 expanded, 4 reopened, t=71.168s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 4
[g=13, 405 evaluated, 369 expanded, 5 reopened, t=71.1713s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 3
[g=15, 632 evaluated, 576 expanded, 5 reopened, t=71.1774s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 3
[g=17, 888 evaluated, 814 expanded, 5 reopened, t=71.1843s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 2
[g=19, 1134 evaluated, 1026 expanded, 5 reopened, t=71.1908s, 123568 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 2
[g=21, 1410 evaluated, 1281 expanded, 5 reopened, t=71.1981s, 123568 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one)): 1
New best heuristic value for rb(dag = from_coloring, extract_plan = true): 1
[g=23, 1628 evaluated, 1458 expanded, 5 reopened, t=71.2034s, 123568 KB]
Completely explored state space -- no solution!
Actual search time: 22.0499s [t=93.2098s]
Expanded 649829 state(s).
Reopened 28869 state(s).
Evaluated 697750 state(s).
Evaluations: 1318710
Generated 3548758 state(s).
Dead ends: 47921 state(s).
Number of registered states: 668881
Best solution cost so far: 24
No solution found - keep searching
Actual search time: 93.4274s [t=93.4366s]
Cumulative statistics:
Expanded 3127260 state(s).
Reopened 643114 state(s).
Evaluated 3318946 state(s).
Evaluations: 5803093
Generated 16874140 state(s).
Dead ends: 0 state(s).
Search time: 93.4275s
Total time: 93.4366s
Solution found.
Peak memory: 123568 KB
