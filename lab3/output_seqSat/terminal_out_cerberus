['/planner/fast-downward.py', '--build', 'release64', '--plan-file', 'output_cerberus_ipc201018', '--transform-task', 'preprocess', 'domain.pddl', 'uav_problem_u4_r2_l8_p10_c10_g10_ct2.pddl', '--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
Deleting existing plans
INFO     Running translator.
INFO     translator input: ['domain.pddl', 'uav_problem_u4_r2_l8_p10_c10_g10_ct2.pddl']
INFO     translator arguments: []
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     callstring: /usr/bin/python /planner/builds/release64/bin/translate/translate.py domain.pddl uav_problem_u4_r2_l8_p10_c10_g10_ct2.pddl
Parsing...
Parsing: [0.010s CPU, 0.013s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 61 rules.
Computing model... [0.110s CPU, 0.108s wall-clock]
7501 relevant atoms
2390 auxiliary atoms
9891 final queue length
27903 total queue pushes
Completing instantiation... [0.320s CPU, 0.321s wall-clock]
Instantiating: [0.440s CPU, 0.441s wall-clock]
Computing fact groups...
Finding invariants...
17 initial candidates
Finding invariants: [0.010s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
112 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.017s wall-clock]
Translating task: [0.400s CPU, 0.400s wall-clock]
9120 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
28 propositions removed
Detecting unreachable propositions: [0.190s CPU, 0.197s wall-clock]
Reordering and filtering variables...
92 of 110 variables necessary.
0 of 8 mutex groups necessary.
7064 of 7136 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.060s CPU, 0.054s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 232
Translator goal facts: 14
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 7064
Translator axioms: 0
Translator task size: 61858
Translator peak memory: 68892 KB
Writing output... [0.060s CPU, 0.068s wall-clock]
Done! [1.180s CPU, 1.203s wall-clock]
INFO     Run task transformation (preprocess).
INFO     Absolute path: /planner/builds/release64/bin/preprocess
INFO     callstring: /planner/builds/release64/bin/preprocess < output.sas
Building causal graph...
The causal graph is not acyclic.
92 variables of 92 necessary
0 of 0 mutex groups necessary.
7064 of 7064 operators necessary.
0 of 0 axiom rules necessary.
Initializing mutex computation...
Mutex computation initialized with 232 fluents.
iteration for mutex detection and operator pruning
Initialize m_index fw
Initialized mvalues forward: reached=8464, notReached=44720, spurious=640
Initialize m_ops fw
Computing mutexes...
Mutex computation finished with reached=52324, notReached=860, spurious=640
0 operators are spurious because were not triggered
H^2 mutexes added fw: 860, unreachable: 0
0 of 7064 operators detected as spurious
iteration for mutex detection and operator pruning
Initialize m_index bw
Init values regression
Initialized mvalues backward: reached=34908, notReached=17416, spurious=1500
Initialize m_ops bw
Computing mutexes...
Mutex computation finished with reached=52324, notReached=0, spurious=1500
0 operators are spurious because were not triggered
H^2 mutexes added bw: 0, unreachable: 0
0 of 7064 operators detected as spurious
Total mutex and disambiguation time: 0.55182 iterations: 2
430 of 430 mutex groups necessary.
7064 of 7064 operators necessary.
0 of 0 axiom rules necessary.
Change id of operators: 7064
Change id of mutexes
Change id of goals
Change id of initial state
Remove unreachable facts from variables: 92
430 of 430 mutex groups necessary.
7064 of 7064 operators necessary.
0 of 0 axiom rules necessary.
Updating causal graph and pruning unnecessary facts
92 variables of 92 of 92 necessary
The causal graph is not acyclic.
92 variables of 92 necessary
430 of 430 mutex groups necessary.
7064 of 7064 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor variables: 92
Preprocessor facts: 232
Preprocessor derived variables: 0
Preprocessor operators: 7064
Preprocessor mutex groups: 430
Preprocessor task size: 62718
Writing output...
done
INFO     Running search (release64).
INFO     search input: output.sas
INFO     search arguments: ['--if-unit-cost', '--heuristic', 'hrb=RB(dag=from_coloring, extract_plan=true)', '--heuristic', 'hn=novelty(eval=hrb)', '--heuristic', 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),\n                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--if-non-unit-cost', '--heuristic', 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))', '--heuristic', 'hn=novelty(eval=hrb1)', '--heuristic', 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))', '--heuristic', 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))', '--heuristic', 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))', '--search', 'iterated([\n                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],\n                            cost_type=one,reopen_closed=false),\n                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],\n                            reopen_closed=false),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),\n                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)\n                ], bound=infinity, repeat_last=true, continue_on_fail=true)', '--always']
INFO     search time limit: None
INFO     search memory limit: None
INFO     search executable: /planner/builds/release64/bin/downward
INFO     callstring: /planner/builds/release64/bin/downward --if-unit-cost --heuristic 'hrb=RB(dag=from_coloring, extract_plan=true)' --heuristic 'hn=novelty(eval=hrb)' --heuristic 'hlm=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=ONE))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb]), single(hrb,pref_only=true), single(hlm), single(hlm,pref_only=true)], boost=1000),preferred=[hrb,hlm]),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=5),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=3),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=2),
                lazy_wastar([hrb,hlm],preferred=[hrb,hlm],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --if-non-unit-cost --heuristic 'hrb1=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(one))' --heuristic 'hn=novelty(eval=hrb1)' --heuristic 'hlm1=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=one),transform=adapt_costs(one))' --heuristic 'hrb2=RB(dag=from_coloring, extract_plan=true, transform=adapt_costs(plusone))' --heuristic 'hlm2=lmcount(lm_rhw(reasonable_orders=true,lm_cost_type=plusone),transform=adapt_costs(plusone))' --search 'iterated([
                lazy(open=alt([tiebreaking([hn, hrb1]), single(hrb1,pref_only=true), single(hlm1), single(hlm1,pref_only=true)], boost=1000), preferred=[hrb1,hlm1],
                            cost_type=one,reopen_closed=false),
                lazy_greedy([hrb2,hlm2],preferred=[hrb2,hlm2],
                            reopen_closed=false),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=5),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=3),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=2),
                lazy_wastar([hrb2,hlm2],preferred=[hrb2,hlm2],w=1)
                ], bound=infinity, repeat_last=true, continue_on_fail=true)' --always --internal-plan-file output_cerberus_ipc201018 < output.sas
reading input... [t=0.000172936s]
done reading input! [t=0.0490636s]
packing state variables...done! [t=0.0491011s]
Variables: 92
FactPairs: 232
Bytes per state: 16
Building successor generator...done! [t=0.0528737s]
peak memory difference for root successor generator creation: 1052 KB
time for root successor generation creation: 0.00369042s
done initializing global data [t=0.0529185s]
Simplifying 25600 unary operators... done! [21424 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing novelty heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0542301s
Discovered 29 landmarks, of which 5 are disjunctive and 0 are conjunctive 
20 edges
Simplifying 25600 unary operators... done! [21424 unary operators]
Initializing additive heuristic...
Initializing FF heuristic...
Initializing extended DTGs
Initializing Red-Black Fact Following heuristic...
Initializing Exploration...
Initializing landmarks count heuristic...
Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
approx. obedient reasonable orders
Removed 0 reasonable or obedient reasonable orders
Landmarks generation time: 0.0652579s
Discovered 29 landmarks, of which 5 are disjunctive and 0 are conjunctive 
20 edges
Starting search: lazy(open = alt(list(tiebreaking(list(hn, hrb1)), single(hrb1, pref_only = true), single(hlm1), single(hlm1, pref_only = true)), boost = 1000), preferred = list(hrb1, hlm1), cost_type = one, reopen_closed = false)
Conducting lazy best first search, (real) bound = 2147483647
14 initial landmarks, 14 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 7064 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 28
Checking connectivity...
Done checking connectivity
Finished initializing Red-Black task core at time step [t=0.421729s]
Total number of invertible variables is 28
building causal graph...done! [t=0.00868115s]
Invertible variables connection status: 1
Invertible variables without leafs connection status: 1
Invertible variables with one directional connection status: 1
Setting black variables...
Variables order is set
Use connected is set to False
---------------------------------------------------------------------------------------
{ Atom obj_at(crate1, depot), NegatedAtom obj_at(crate1, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate10, depot), NegatedAtom obj_at(crate10, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate2, depot), NegatedAtom obj_at(crate2, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate3, depot), NegatedAtom obj_at(crate3, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate4, depot), NegatedAtom obj_at(crate4, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate5, depot), NegatedAtom obj_at(crate5, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate6, depot), NegatedAtom obj_at(crate6, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate7, depot), NegatedAtom obj_at(crate7, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate8, depot), NegatedAtom obj_at(crate8, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate9, depot), NegatedAtom obj_at(crate9, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(carrier1, depot), Atom obj_at(carrier1, loc1), Atom obj_at(carrier1, loc2), Atom obj_at(carrier1, loc3), Atom obj_at(carrier1, loc4), Atom obj_at(carrier1, loc5), Atom obj_at(carrier1, loc6), Atom obj_at(carrier1, loc7), Atom obj_at(carrier1, loc8) } is invertible, marked black [4 side effects]
{ Atom heli_content(uav1, crate1), NegatedAtom heli_content(uav1, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate10), NegatedAtom heli_content(uav1, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate2), NegatedAtom heli_content(uav1, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate3), NegatedAtom heli_content(uav1, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate4), NegatedAtom heli_content(uav1, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate5), NegatedAtom heli_content(uav1, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate6), NegatedAtom heli_content(uav1, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate7), NegatedAtom heli_content(uav1, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate8), NegatedAtom heli_content(uav1, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate9), NegatedAtom heli_content(uav1, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate1), NegatedAtom heli_content(uav2, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate10), NegatedAtom heli_content(uav2, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate2), NegatedAtom heli_content(uav2, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate3), NegatedAtom heli_content(uav2, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate4), NegatedAtom heli_content(uav2, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate5), NegatedAtom heli_content(uav2, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate6), NegatedAtom heli_content(uav2, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate7), NegatedAtom heli_content(uav2, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate8), NegatedAtom heli_content(uav2, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate9), NegatedAtom heli_content(uav2, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate1), NegatedAtom heli_content(uav3, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate10), NegatedAtom heli_content(uav3, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate2), NegatedAtom heli_content(uav3, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate3), NegatedAtom heli_content(uav3, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate4), NegatedAtom heli_content(uav3, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate5), NegatedAtom heli_content(uav3, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate6), NegatedAtom heli_content(uav3, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate7), NegatedAtom heli_content(uav3, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate8), NegatedAtom heli_content(uav3, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate9), NegatedAtom heli_content(uav3, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate1), NegatedAtom heli_content(uav4, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate10), NegatedAtom heli_content(uav4, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate2), NegatedAtom heli_content(uav4, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate3), NegatedAtom heli_content(uav4, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate4), NegatedAtom heli_content(uav4, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate5), NegatedAtom heli_content(uav4, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate6), NegatedAtom heli_content(uav4, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate7), NegatedAtom heli_content(uav4, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate8), NegatedAtom heli_content(uav4, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate9), NegatedAtom heli_content(uav4, crate9) } is not invertible, marked red [11 side effects]
{ Atom obj_at(carrier2, depot), Atom obj_at(carrier2, loc1), Atom obj_at(carrier2, loc2), Atom obj_at(carrier2, loc3), Atom obj_at(carrier2, loc4), Atom obj_at(carrier2, loc5), Atom obj_at(carrier2, loc6), Atom obj_at(carrier2, loc7), Atom obj_at(carrier2, loc8) } is invertible, marked black [4 side effects]
{ Atom carrier_crate(carrier1, crate1), NegatedAtom carrier_crate(carrier1, crate1) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate10), NegatedAtom carrier_crate(carrier1, crate10) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate2), NegatedAtom carrier_crate(carrier1, crate2) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate3), NegatedAtom carrier_crate(carrier1, crate3) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate4), NegatedAtom carrier_crate(carrier1, crate4) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate5), NegatedAtom carrier_crate(carrier1, crate5) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate6), NegatedAtom carrier_crate(carrier1, crate6) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate7), NegatedAtom carrier_crate(carrier1, crate7) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate8), NegatedAtom carrier_crate(carrier1, crate8) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate9), NegatedAtom carrier_crate(carrier1, crate9) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate1), NegatedAtom carrier_crate(carrier2, crate1) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate10), NegatedAtom carrier_crate(carrier2, crate10) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate2), NegatedAtom carrier_crate(carrier2, crate2) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate3), NegatedAtom carrier_crate(carrier2, crate3) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate4), NegatedAtom carrier_crate(carrier2, crate4) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate5), NegatedAtom carrier_crate(carrier2, crate5) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate6), NegatedAtom carrier_crate(carrier2, crate6) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate7), NegatedAtom carrier_crate(carrier2, crate7) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate8), NegatedAtom carrier_crate(carrier2, crate8) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate9), NegatedAtom carrier_crate(carrier2, crate9) } is invertible, marked black [9 side effects]
{ Atom heli_free(uav1), NegatedAtom heli_free(uav1) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav2), NegatedAtom heli_free(uav2) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav3), NegatedAtom heli_free(uav3) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav4), NegatedAtom heli_free(uav4) } is not invertible, marked red [52 side effects]
{ Atom carrier_freespace(carrier1, num0), Atom carrier_freespace(carrier1, num1), Atom carrier_freespace(carrier1, num2), Atom carrier_freespace(carrier1, num3), Atom carrier_freespace(carrier1, num4) } is invertible, marked red [54 side effects]
{ Atom carrier_freespace(carrier2, num0), Atom carrier_freespace(carrier2, num1), Atom carrier_freespace(carrier2, num2), Atom carrier_freespace(carrier2, num3), Atom carrier_freespace(carrier2, num4) } is invertible, marked red [54 side effects]
{ Atom obj_at(uav1, depot), Atom obj_at(uav1, loc1), Atom obj_at(uav1, loc2), Atom obj_at(uav1, loc3), Atom obj_at(uav1, loc4), Atom obj_at(uav1, loc5), Atom obj_at(uav1, loc6), Atom obj_at(uav1, loc7), Atom obj_at(uav1, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav2, depot), Atom obj_at(uav2, loc1), Atom obj_at(uav2, loc2), Atom obj_at(uav2, loc3), Atom obj_at(uav2, loc4), Atom obj_at(uav2, loc5), Atom obj_at(uav2, loc6), Atom obj_at(uav2, loc7), Atom obj_at(uav2, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav3, depot), Atom obj_at(uav3, loc1), Atom obj_at(uav3, loc2), Atom obj_at(uav3, loc3), Atom obj_at(uav3, loc4), Atom obj_at(uav3, loc5), Atom obj_at(uav3, loc6), Atom obj_at(uav3, loc7), Atom obj_at(uav3, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav4, depot), Atom obj_at(uav4, loc1), Atom obj_at(uav4, loc2), Atom obj_at(uav4, loc3), Atom obj_at(uav4, loc4), Atom obj_at(uav4, loc5), Atom obj_at(uav4, loc6), Atom obj_at(uav4, loc7), Atom obj_at(uav4, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom preson_crate(person1, medicine), NegatedAtom preson_crate(person1, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person4, medicine), NegatedAtom preson_crate(person4, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person6, medicine), NegatedAtom preson_crate(person6, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person8, medicine), NegatedAtom preson_crate(person8, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person9, medicine), NegatedAtom preson_crate(person9, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person1, food), NegatedAtom preson_crate(person1, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person2, food), NegatedAtom preson_crate(person2, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person4, food), NegatedAtom preson_crate(person4, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person5, food), NegatedAtom preson_crate(person5, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person7, food), NegatedAtom preson_crate(person7, food) } is not invertible, marked red [24 side effects]
---------------------------------------------------------------------------------------
Total number of black variables is 22
Total number of black root variables is 0
Total number of variables is 92
Total number of variables with all pairs of values connected is 4
Total number of variables with all values connected to goal is 0
Total number of black variables with strongly connected parents only is 0
Maximal number of side effects for black variable is 9
---------------------------------------------------------------------------------------
Black DAG usage status: 1
Causal links between black variables were found. Using black DAG
Finished initializing Red-Black task at time step [t=0.432489s]
Counting red preconditions..
Preparing for red fact following..
Setting use black reachable for black variables..
Keeping achieving operators for red facts..
Initializing black variables...
Adding edges to forward graph, for the later calculation of missing values
Precalculating all pair shortest paths
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=0.554179s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 15
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 17
New best heuristic value for novelty(eval = hrb1): 0
[g=0, 1 evaluated, 0 expanded, t=0.555045s, 36424 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 15
Initial heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 17
Initial heuristic value for novelty(eval = hrb1): 0
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 14
[g=4, 6335 evaluated, 6334 expanded, t=4.07468s, 45416 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 16
[g=6, 6524 evaluated, 6523 expanded, t=4.17452s, 45680 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 13
[g=8, 9008 evaluated, 9007 expanded, t=5.41205s, 48336 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 15
[g=10, 9918 evaluated, 9917 expanded, t=5.88332s, 49392 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 12
[g=12, 11991 evaluated, 11990 expanded, t=6.88775s, 51640 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 14
[g=13, 12004 evaluated, 12003 expanded, t=6.89525s, 51640 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 11
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 13
[g=14, 12055 evaluated, 12054 expanded, t=6.92249s, 51640 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 10
[g=16, 14681 evaluated, 14680 expanded, t=8.15324s, 54544 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 12
[g=17, 14691 evaluated, 14690 expanded, t=8.15813s, 54544 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 11
[g=18, 14756 evaluated, 14755 expanded, t=8.18823s, 54676 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 9
[g=20, 17611 evaluated, 17610 expanded, t=9.5572s, 57768 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 10
[g=21, 17624 evaluated, 17623 expanded, t=9.56271s, 57768 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 8
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 9
[g=22, 17671 evaluated, 17670 expanded, t=9.58175s, 57900 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 7
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 8
[g=24, 19538 evaluated, 19537 expanded, t=10.3414s, 59752 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 7
[g=25, 19587 evaluated, 19586 expanded, t=10.3609s, 59884 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 6
[g=27, 21949 evaluated, 21948 expanded, t=11.2697s, 62536 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 6
[g=29, 22197 evaluated, 22196 expanded, t=11.363s, 62800 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 5
[g=31, 23689 evaluated, 23688 expanded, t=11.9448s, 64516 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 5
[g=32, 23690 evaluated, 23689 expanded, t=11.9453s, 64516 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 4
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 4
[g=33, 23763 evaluated, 23762 expanded, t=11.9728s, 64516 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 3
[g=35, 25575 evaluated, 25574 expanded, t=12.5981s, 66512 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 3
[g=36, 25576 evaluated, 25575 expanded, t=12.5986s, 66512 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = one), transform = adapt_costs(one)): 2
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(one)): 2
[g=37, 25661 evaluated, 25660 expanded, t=12.6265s, 66644 KB]
Cost to: 2884, cost from: 126 the total is: 3010
Solution found!
Actual search time: 12.6272s [t=12.9534s]
pickup_crate uav1 crate1 depot food (10)
pickup_crate uav2 crate10 depot medicine (10)
fly_to uav1 depot loc3 (193)
deliver uav1 person2 loc3 crate1 food (10)
pickup_crate uav3 crate2 depot food (10)
fly_to uav1 loc3 depot (193)
fly_to uav2 depot loc1 (147)
deliver uav2 person6 loc1 crate10 medicine (10)
pickup_crate uav1 crate6 depot medicine (10)
fly_to uav2 loc1 depot (147)
fly_to uav1 depot loc1 (147)
deliver uav1 person9 loc1 crate6 medicine (10)
pickup_crate uav2 crate7 depot medicine (10)
fly_to uav1 loc1 depot (147)
fly_to uav2 depot loc3 (193)
deliver uav2 person4 loc3 crate7 medicine (10)
pickup_crate uav1 crate8 depot medicine (10)
fly_to uav2 loc3 depot (193)
fly_to uav1 depot loc6 (53)
deliver uav1 person8 loc6 crate8 medicine (10)
pickup_crate uav2 crate9 depot medicine (10)
fly_to uav1 loc6 depot (53)
fly_to uav2 depot loc8 (126)
deliver uav2 person1 loc8 crate9 medicine (10)
fly_to uav2 loc8 depot (126)
fly_to uav3 depot loc3 (193)
deliver uav3 person4 loc3 crate2 food (10)
pickup_crate uav1 crate3 depot food (10)
fly_to uav3 loc3 depot (193)
fly_to uav1 depot loc3 (193)
deliver uav1 person5 loc3 crate3 food (10)
pickup_crate uav2 crate4 depot food (10)
fly_to uav1 loc3 depot (193)
fly_to uav2 depot loc5 (34)
deliver uav2 person7 loc5 crate4 food (10)
pickup_crate uav1 crate5 depot food (10)
fly_to uav2 loc5 depot (34)
fly_to uav1 depot loc8 (126)
deliver uav1 person1 loc8 crate5 food (10)
fly_to uav1 loc8 depot (126)
Plan length: 40 step(s).
Plan cost: 3010
Expanded 26632 state(s).
Reopened 0 state(s).
Evaluated 26633 state(s).
Evaluations: 53266
Generated 1649097 state(s).
Dead ends: 0 state(s).
Number of registered states: 26633
Best solution cost so far: 3010
Solution found - keep searching
Starting search: lazy_greedy(list(hrb2, hlm2), preferred = list(hrb2, hlm2), reopen_closed = false)
Conducting lazy best first search, (real) bound = 3010
14 initial landmarks, 14 goal landmarks
Attempting to extract plan from the heuristic
Running A* instead of Dijkstra. Using the distances ignoring outside conditions for heuristic estimates.
Initializing Red-Black task...
Initializing Red-Black task core...
Adding 7064 operators to extended DTGs
Checking invertibility...
Done checking invertibility
Number of invertible variables is 28
Checking connectivity...
Done checking connectivity
Finished initializing Red-Black task core at time step [t=13.0526s]
Total number of invertible variables is 28
building causal graph...done! [t=0.00897695s]
Invertible variables connection status: 1
Invertible variables without leafs connection status: 1
Invertible variables with one directional connection status: 1
Setting black variables...
Variables order is set
Use connected is set to False
---------------------------------------------------------------------------------------
{ Atom obj_at(crate1, depot), NegatedAtom obj_at(crate1, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate10, depot), NegatedAtom obj_at(crate10, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate2, depot), NegatedAtom obj_at(crate2, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate3, depot), NegatedAtom obj_at(crate3, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate4, depot), NegatedAtom obj_at(crate4, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate5, depot), NegatedAtom obj_at(crate5, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate6, depot), NegatedAtom obj_at(crate6, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate7, depot), NegatedAtom obj_at(crate7, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate8, depot), NegatedAtom obj_at(crate8, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(crate9, depot), NegatedAtom obj_at(crate9, depot) } is not invertible, marked red [8 side effects]
{ Atom obj_at(carrier1, depot), Atom obj_at(carrier1, loc1), Atom obj_at(carrier1, loc2), Atom obj_at(carrier1, loc3), Atom obj_at(carrier1, loc4), Atom obj_at(carrier1, loc5), Atom obj_at(carrier1, loc6), Atom obj_at(carrier1, loc7), Atom obj_at(carrier1, loc8) } is invertible, marked black [4 side effects]
{ Atom heli_content(uav1, crate1), NegatedAtom heli_content(uav1, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate10), NegatedAtom heli_content(uav1, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate2), NegatedAtom heli_content(uav1, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate3), NegatedAtom heli_content(uav1, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate4), NegatedAtom heli_content(uav1, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate5), NegatedAtom heli_content(uav1, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate6), NegatedAtom heli_content(uav1, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate7), NegatedAtom heli_content(uav1, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate8), NegatedAtom heli_content(uav1, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav1, crate9), NegatedAtom heli_content(uav1, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate1), NegatedAtom heli_content(uav2, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate10), NegatedAtom heli_content(uav2, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate2), NegatedAtom heli_content(uav2, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate3), NegatedAtom heli_content(uav2, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate4), NegatedAtom heli_content(uav2, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate5), NegatedAtom heli_content(uav2, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate6), NegatedAtom heli_content(uav2, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate7), NegatedAtom heli_content(uav2, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate8), NegatedAtom heli_content(uav2, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav2, crate9), NegatedAtom heli_content(uav2, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate1), NegatedAtom heli_content(uav3, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate10), NegatedAtom heli_content(uav3, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate2), NegatedAtom heli_content(uav3, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate3), NegatedAtom heli_content(uav3, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate4), NegatedAtom heli_content(uav3, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate5), NegatedAtom heli_content(uav3, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate6), NegatedAtom heli_content(uav3, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate7), NegatedAtom heli_content(uav3, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate8), NegatedAtom heli_content(uav3, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav3, crate9), NegatedAtom heli_content(uav3, crate9) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate1), NegatedAtom heli_content(uav4, crate1) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate10), NegatedAtom heli_content(uav4, crate10) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate2), NegatedAtom heli_content(uav4, crate2) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate3), NegatedAtom heli_content(uav4, crate3) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate4), NegatedAtom heli_content(uav4, crate4) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate5), NegatedAtom heli_content(uav4, crate5) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate6), NegatedAtom heli_content(uav4, crate6) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate7), NegatedAtom heli_content(uav4, crate7) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate8), NegatedAtom heli_content(uav4, crate8) } is not invertible, marked red [11 side effects]
{ Atom heli_content(uav4, crate9), NegatedAtom heli_content(uav4, crate9) } is not invertible, marked red [11 side effects]
{ Atom obj_at(carrier2, depot), Atom obj_at(carrier2, loc1), Atom obj_at(carrier2, loc2), Atom obj_at(carrier2, loc3), Atom obj_at(carrier2, loc4), Atom obj_at(carrier2, loc5), Atom obj_at(carrier2, loc6), Atom obj_at(carrier2, loc7), Atom obj_at(carrier2, loc8) } is invertible, marked black [4 side effects]
{ Atom carrier_crate(carrier1, crate1), NegatedAtom carrier_crate(carrier1, crate1) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate10), NegatedAtom carrier_crate(carrier1, crate10) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate2), NegatedAtom carrier_crate(carrier1, crate2) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate3), NegatedAtom carrier_crate(carrier1, crate3) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate4), NegatedAtom carrier_crate(carrier1, crate4) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate5), NegatedAtom carrier_crate(carrier1, crate5) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate6), NegatedAtom carrier_crate(carrier1, crate6) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate7), NegatedAtom carrier_crate(carrier1, crate7) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate8), NegatedAtom carrier_crate(carrier1, crate8) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier1, crate9), NegatedAtom carrier_crate(carrier1, crate9) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate1), NegatedAtom carrier_crate(carrier2, crate1) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate10), NegatedAtom carrier_crate(carrier2, crate10) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate2), NegatedAtom carrier_crate(carrier2, crate2) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate3), NegatedAtom carrier_crate(carrier2, crate3) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate4), NegatedAtom carrier_crate(carrier2, crate4) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate5), NegatedAtom carrier_crate(carrier2, crate5) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate6), NegatedAtom carrier_crate(carrier2, crate6) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate7), NegatedAtom carrier_crate(carrier2, crate7) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate8), NegatedAtom carrier_crate(carrier2, crate8) } is invertible, marked black [9 side effects]
{ Atom carrier_crate(carrier2, crate9), NegatedAtom carrier_crate(carrier2, crate9) } is invertible, marked black [9 side effects]
{ Atom heli_free(uav1), NegatedAtom heli_free(uav1) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav2), NegatedAtom heli_free(uav2) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav3), NegatedAtom heli_free(uav3) } is not invertible, marked red [52 side effects]
{ Atom heli_free(uav4), NegatedAtom heli_free(uav4) } is not invertible, marked red [52 side effects]
{ Atom carrier_freespace(carrier1, num0), Atom carrier_freespace(carrier1, num1), Atom carrier_freespace(carrier1, num2), Atom carrier_freespace(carrier1, num3), Atom carrier_freespace(carrier1, num4) } is invertible, marked red [54 side effects]
{ Atom carrier_freespace(carrier2, num0), Atom carrier_freespace(carrier2, num1), Atom carrier_freespace(carrier2, num2), Atom carrier_freespace(carrier2, num3), Atom carrier_freespace(carrier2, num4) } is invertible, marked red [54 side effects]
{ Atom obj_at(uav1, depot), Atom obj_at(uav1, loc1), Atom obj_at(uav1, loc2), Atom obj_at(uav1, loc3), Atom obj_at(uav1, loc4), Atom obj_at(uav1, loc5), Atom obj_at(uav1, loc6), Atom obj_at(uav1, loc7), Atom obj_at(uav1, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav2, depot), Atom obj_at(uav2, loc1), Atom obj_at(uav2, loc2), Atom obj_at(uav2, loc3), Atom obj_at(uav2, loc4), Atom obj_at(uav2, loc5), Atom obj_at(uav2, loc6), Atom obj_at(uav2, loc7), Atom obj_at(uav2, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav3, depot), Atom obj_at(uav3, loc1), Atom obj_at(uav3, loc2), Atom obj_at(uav3, loc3), Atom obj_at(uav3, loc4), Atom obj_at(uav3, loc5), Atom obj_at(uav3, loc6), Atom obj_at(uav3, loc7), Atom obj_at(uav3, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom obj_at(uav4, depot), Atom obj_at(uav4, loc1), Atom obj_at(uav4, loc2), Atom obj_at(uav4, loc3), Atom obj_at(uav4, loc4), Atom obj_at(uav4, loc5), Atom obj_at(uav4, loc6), Atom obj_at(uav4, loc7), Atom obj_at(uav4, loc8) } is invertible, marked red [2 side effects], all pairs connected
{ Atom preson_crate(person1, medicine), NegatedAtom preson_crate(person1, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person4, medicine), NegatedAtom preson_crate(person4, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person6, medicine), NegatedAtom preson_crate(person6, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person8, medicine), NegatedAtom preson_crate(person8, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person9, medicine), NegatedAtom preson_crate(person9, medicine) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person1, food), NegatedAtom preson_crate(person1, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person2, food), NegatedAtom preson_crate(person2, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person4, food), NegatedAtom preson_crate(person4, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person5, food), NegatedAtom preson_crate(person5, food) } is not invertible, marked red [24 side effects]
{ Atom preson_crate(person7, food), NegatedAtom preson_crate(person7, food) } is not invertible, marked red [24 side effects]
---------------------------------------------------------------------------------------
Total number of black variables is 22
Total number of black root variables is 0
Total number of variables is 92
Total number of variables with all pairs of values connected is 4
Total number of variables with all values connected to goal is 0
Total number of black variables with strongly connected parents only is 0
Maximal number of side effects for black variable is 9
---------------------------------------------------------------------------------------
Black DAG usage status: 1
Causal links between black variables were found. Using black DAG
Finished initializing Red-Black task at time step [t=13.0638s]
Counting red preconditions..
Preparing for red fact following..
Setting use black reachable for black variables..
Keeping achieving operators for red facts..
Initializing black variables...
Adding edges to forward graph, for the later calculation of missing values
Precalculating all pair shortest paths
Plan extraction: 1
Finished initializing Red-Black Fact Following heuristic at time step [t=13.183s]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 321
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 734
[g=0, 1 evaluated, 0 expanded, t=13.1844s, 67832 KB]
Initial heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 321
Initial heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 734
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 306
[g=193, 8 evaluated, 7 expanded, t=13.1889s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 280
[g=126, 10 evaluated, 9 expanded, t=13.1901s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 258
[g=147, 12 evaluated, 11 expanded, t=13.1913s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 205
[g=200, 23 evaluated, 22 expanded, t=13.1977s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 190
[g=393, 33 evaluated, 32 expanded, t=13.2035s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 156
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 702
[g=427, 46 evaluated, 45 expanded, t=13.2113s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 149
[g=521, 49 evaluated, 48 expanded, t=13.2131s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 130
[g=748, 63 evaluated, 62 expanded, t=13.2215s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 119
[g=1154, 123 evaluated, 122 expanded, t=13.2557s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 108
[g=1560, 234 evaluated, 233 expanded, t=13.3184s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 701
[g=1729, 256 evaluated, 255 expanded, t=13.3308s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 97
[g=1966, 280 evaluated, 279 expanded, t=13.3437s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 690
[g=2135, 327 evaluated, 326 expanded, t=13.3689s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 679
[g=2145, 328 evaluated, 327 expanded, t=13.3695s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 590
[g=2348, 332 evaluated, 331 expanded, t=13.3715s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 70
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 558
[g=2382, 335 evaluated, 334 expanded, t=13.3731s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 59
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 463
[g=2392, 336 evaluated, 335 expanded, t=13.3735s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 58
[g=2426, 338 evaluated, 337 expanded, t=13.3744s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 48
[g=2572, 356 evaluated, 355 expanded, t=13.3823s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 47
[g=2698, 358 evaluated, 357 expanded, t=13.3831s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 460
[g=2751, 365 evaluated, 364 expanded, t=13.3861s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 37
[g=2865, 373 evaluated, 372 expanded, t=13.3896s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 36
[g=2970, 386 evaluated, 385 expanded, t=13.3947s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 427
[g=2981, 466 evaluated, 465 expanded, t=13.4268s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 35
[g=2877, 493 evaluated, 492 expanded, t=13.438s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 26
[g=2970, 506 evaluated, 505 expanded, t=13.4433s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 395
[g=3002, 919 evaluated, 918 expanded, t=13.6102s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 352
[g=2878, 2571 evaluated, 2570 expanded, t=14.3124s, 67832 KB]
New best heuristic value for rb(dag = from_coloring, extract_plan = true, transform = adapt_costs(plusone)): 338
[g=2990, 55011 evaluated, 54814 expanded, t=36.9295s, 67832 KB]
New best heuristic value for lmcount(lm_rhw(reasonable_orders = true, lm_cost_type = plusone), transform = adapt_costs(plusone)): 15
[g=2978, 161254 evaluated, 159736 expanded, t=84.0413s, 94160 KB]
Peak memory: 211732 KB
caught signal 2 -- exiting
